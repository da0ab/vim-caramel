# ФОРМАТИРОВАНИЕ

# Сброс всех свойств
all:initial;                   # Устанавливает все свойства в значение по умолчанию (начальное значение)
all:inherit;                   # Устанавливает все свойства в значение родительского элемента
all:unset;                     # Устанавливает все свойства в значение, либо 'initial', либо 'inherit' в зависимости от контекста

# Обтекание
float:left;
float:right;
float:none;

# Отмена обтекания
clear:both;
clear:none;
clear:left;
clear:right;

# Отображение содержания элемента
overflow:auto;
overflow:hidden;
overflow:scroll;
overflow:visible;

overflow-x:auto;
overflow-x:hidden;
overflow-x:scroll;
overflow-x:visible;

overflow-y:auto;
overflow-y:hidden;
overflow-y:scroll;
overflow-y:visible;

# Видимость
visibility:visible;            # Элемент видим
visibility:hidden;             # Элемент невиден, но занимает место в документе
visibility:collapse;           # Используется для таблиц; скрывает строку или ячейку и не занимает место

clip-path:;                    # Части внутри области

# Вертикальное выравнивание
vertical-align:baseline;       # Элемент выравнивается по базовой линии текста
vertical-align:bottom;         # Элемент выравнивается по нижнему краю
vertical-align:middle;         # Элемент выравнивается по середине
vertical-align:sub;            # Элемент выравнивается как подстрочный
vertical-align:super;          # Элемент выравнивается как надстрочный
vertical-align:text-bottom;    # Элемент выравнивается по нижнему краю текста
vertical-align:text-top;       # Элемент выравнивается по верхнему краю текста
vertical-align:top;            # Элемент выравнивается по верхнему краю

display:none;
display:block;                 # Элемент отображается как блочный элемент
display:inline;                # Элемент отображается как строчный элемент
display:inline-block;          # Элемент отображается как строчно-блочный элемент
display:inline-table;          # Элемент отображается как строчная таблица

display:list-item;             # Элемент отображается как элемент списка

# table
display:table;                 # Элемент отображается как таблица
display:table-caption;         # Как <caption>
display:table-cell;            # Как <td> или <th>
display:table-column-group;    # Как <col>
display:table-column;          # Определяет, что элемент является группой одной или более колонок таблицы, как <colgroup>
display:table-footer-group;    # Сходно с работой <tfoot>
display:table-header-group;    # Сходно с работой <thead>
display:table-row;             # Отображается как строка таблицы (<tr>)
display:table-row-group;       # Создаёт структурный блок, состоящий из нескольких строк таблицы, как <tbody>

# ПОЗИЦИОНИРОВАНИЕ
# Тип
position:absolute;
position:relative;
position:fixed;
position:sticky;
position:static;               # Сброс

inset:;                        # Сокращение top/right/bottom/left
top:;
right:;
bottom:;
left:;
z-index:;

# ПЕРЕМЕННЫЕ
var(--);
var(--desctope)
var(--m-b)
var(--red)
var(--color-)
var(--color-d)
var(--color-l)
var(--color-sl)

# СОСТОЯНИЯ И ВЗАИМОДЕЙСТВИЯ
:active                        # Элемент в активном состоянии
:checked                       # Выбранный элемент формы
:default                       # Элемент по умолчанию
:disabled                      # Отключённый элемент
:enabled                       # Включённый элемент
:focus                         # Элемент в фокусе
:focus-visible                 # Фокус с клавиатуры
:focus-within                  # Родитель, содержащий фокус
:hover                         # Наведение курсора
:indeterminate                 # Элемент с неопределенным состоянием
:in-range                      # Значение в пределах диапазона
:out-of-range                  # Значение вне диапазона
:optional                      # Поле формы, необязательное для заполнения
:required                      # Обязательное поле формы
:valid                         # Валидное (правильное) значение формы
:invalid                       # Невалидное значение
:read-only                     # Только для чтения
:read-write                    # Можно редактировать
:link                          # Ссылка, ещё не посещённая
:visited                       # Посещённая ссылка
:empty                         # Пустой элемент
:target                        # Целевой элемент якоря

# ДЕТСАД
:first-child                   # Первый ребёнок
:last-child                    # Последний ребёнок
:only-child                    # Единственный ребёнок

:nth-child()                   # n-й дочерний элемент
:nth-child(even)               # Все чётные элементы или 2n
:nth-child(odd)                # Все нечётные элементы или 2n+1

:nth-last-child()              # n-й с конца
:nth-child(An+BofS)          # По формуле в группе

:first-of-type                 # Первый своего типа
:last-of-type                  # Последний своего типа
:only-of-type                  # Единственный своего типа

:nth-of-type()                 # n-й своего типа
:nth-of-type(even)             # Все чётные элементы или 2n своего типа
:nth-of-type(odd)              # Все нечётные элементы или 2n+1 своего типа

:nth-last-of-type()            # n-й с конца своего типа
:nth-last-child(An+B of S)     # С конца, по формуле

# ФУНКЦИОНАЛЬНЫЕ ПСЕВДОКЛАССЫ
:not()                         # Исключение по селектору
:root                          # Корневой элемент документа
:is()                          # Соответствие любому из списка
:where()                       # Без специфичности, как is()
:has()                         # Родитель, содержащий элемент
:scope                         # Текущий элемент области стилей

# ПСЕВДОЭЛЕМЕНТЫ
::before                       # Псевдоэлемент до содержимого
::after                        # Псевдоэлемент после содержмого
::first-line                   # Первая строка текста
::first-letter                 # Первая буква
initial-letter:normal;
# Указывает количество строк, которые будут занимать начальные буквы (например, 2)
initial-letter:drop;           # Начальная буква опущена на указанное количество строк 2 drop
initial-letter:raise;          # Начальная буква поднята на указанное количество строк 2 raise

::backdrop                     # Задний фон для полноэкранных элементов
::selection                    # Выделенный пользователем текст
::placeholder                  # Заполнитель в полях ввода
::marker                       # Маркер списка (например, буллеты)
::cue                          # Стили для текстов субтитров (в WebVTT)
::slotted()                    # Слот в теневом DOM (Shadow DOM)
::part()                       # Части компонента с Shadow DOM
::grammar-error
::spelling-error

# ТЕКСТ И ШРИФТЫ
font:;                          # [font-style||font-variant||font-weight||font-stretch] font-size [/line-height] font-family
font-family:;                   # Семейство шрифта
font-size:;                     # Размер шрифта
line-height:;                   # Межстрочный интервал  <множитель> | <размер> | <проценты> | normal
letter-spacing:;                # Межбуквенное расстояние
word-spacing:;                  # Межсловное расстояние

tab-size:

# Насыщенность
font-weight:bolder;
font-weight:lighter;
font-weight:normal;             # 400
font-weight:bold;               # 700
font-weight:100;
font-weight:200;
font-weight:300;
font-weight:400;                # normal
font-weight:500;
font-weight:600;
font-weight:700;                # bold
font-weight:800;
font-weight:900;

text-transform:none;
text-transform:capitalize;      # Каждое слово с заглавной буквы
text-transform:uppercase;       # Все заглавные
text-transform:lowercase;       # Все строчные
text-transform:inherit;         # Унаследовать значение

# Начертание шрифта
font-style:normal;
font-style:italic;              # Начертание шрифта italic
font-style:oblique;             # Начертание шрифта наклон

text-decoration:underline_solid_var(--color-d);  # Подчёркивание, зачеркивание

text-decoration-line:line-through;  # Зачеркивание текста
text-decoration-line:overline;      # Подчеркивание текста сверху
text-decoration-line:underline;     # Подчеркивание текста снизу
text-decoration-line:none;          # Нет декорации текста

text-decoration-style:solid;        # Сплошная линия
text-decoration-style:double;       # Двойная линия
text-decoration-style:dotted;       # Пунктирная линия
text-decoration-style:dashed;       # Штриховая линия
text-decoration-style:wavy;         # Волнистая линия

text-decoration-color:;             # Цвет линии подчёркивания
text-decoration-offset:;            # Положение линии подчёркивания
text-decoration-thickness:;         # Устанавливает толщину линии подчёркивания

text-decoration-skip-ink:auto;      # Линия прерывается на выносных элементах символов
text-decoration-skip-ink:none;      # Линия отображается сплошной

# Позиции подчеркивания
text-underline-position:auto;       # Автоматическое определение
text-underline-position:under;      # Подчеркивание располагается под текстом
text-underline-position:left;       # Подчеркивание располагается слева от текста, для vertical-lr или vertical-rl
text-underline-position:right;      # Подчеркивание располагается справа от текста, для vertical-lr или vertical-rl

# Тень
text-shadow: 0 0 10px var(--gray);
text-shadow:inset 0 0 10px var(--gray);
text-shadow: 1px 1px 2px black, 0 0 1em red;

-webkit-text-stroke:;
-webkit-text-stroke-color:;     # Цвет обводки
-webkit-text-stroke-width:;     # Толщина обводки

text-indent:;                    # Устанавливает величину отступа первой строки блока текста

# Узость
font-stretch:normal;
font-stretch:ultra-condensed;    # Ультра сжатый шрифт
font-stretch:extra-condensed;    # Экстра сжатый шрифт
font-stretch:condensed;          # Сжатый шрифт
font-stretch:semi-condensed;     # Полусжатый шрифт
font-stretch:semi-expanded;      # Полурасширенный шрифт
font-stretch:expanded;           # Расширенный шрифт
font-stretch:extra-expanded;     # Экстра расширенный шрифт
font-stretch:ultra-expanded;     # Ультра расширенный шрифт

font-variant:normal;
font-variant:small-caps;         # Модифицирует все строчные символы как заглавные уменьшенного размера

# Горизонтальное выравнивание текста в пределах элемента
text-align:center;               # Центрирование текста
text-align:justify;              # Выравнивание текста по ширине
text-align:left;                 # Выравнивание текста по левому краю
text-align:right;                # Выравнивание текста по правому краю
text-align:start;                # Выравнивание текста в зависимости от направления текста (лево-направленный или право-направленный)
text-align:end;                  # Выравнивание текста в зависимости от направления текста (лево-направленный или право-направленный)

# Выравнивание последней строки
text-align-last:auto;            # Автоматическое выравнивание последней строки
text-align-last:start;           # Выравнивание последней строки по началу
text-align-last:end;             # Выравнивание последней строки по концу
text-align-last:left;            # Выравнивание последней строки по левому краю
text-align-last:right;           # Выравнивание последней строки по правому краю
text-align-last:center;          # Центрирование последней строки
text-align-last:justify;         # Выравнивание последней строки по ширине

# Обработка пробелов и переносов
white-space:normal;
white-space:nowrap;              # Пробелы не обрабатываются, текст не переносится
white-space:pre;                 # Пробелы и переносы сохраняются, как в HTML
white-space:pre-line;            # Пробелы обрабатываются, а переносы сохраняются
white-space:pre-wrap;            # Пробелы и переносы сохраняются, текст переносится

# Переносы
hyphenate-character:'-';         # Устанавливает символ переноса
hyphens:none;                    # Слова не переносятся, даже при наличии в тексте мягких переносов &shy;
hyphens:manual;                  # Переносы слов там, где добавлен &shy; или <wbr>, если их нет, то переносы не делаются
hyphens:auto;                    # Автоматическая гипенизация в зависимости от языка и условий
hyphenate-limit-chars: 6 3 2;    # Параметры переноса
# 6 — минимальная длина слова для переноса на другую строку. 3 — минимальное число символов перед дефисом. 2 — минимальное число символов после дефиса
word-break:normal;               # Обычное поведение переноса слов
word-break:break-all;            # Перенос слов в любом месте, если они не помещаются
word-break:keep-all;             # Запрет на перенос слов, если текст на восточно-азиатских языках

word-wrap:normal;                # Обычное поведение, не допускающее переноса слов
word-wrap:break-word;            # Позволяет переносить длинные слова на новую строку, если они не помещаются

text-overflow:clip;
text-overflow:ellipsis;          # Вместе с white-space: nowrap; overflow: hidden;

-webkit-line-clamp:;             # Примерно тоже

text-emphasis:;                  # Ударение и азиатчина

# Направление
writing-mode: horizontal-tb;     # Горизонтальный режим, текст читается слева направо, строки располагаются сверху вниз
writing-mode: vertical-rl;       # Вертикальный режим, текст читается сверху вниз, строки располагаются справа налево
writing-mode: vertical-lr;       # Вертикальный режим, текст читается сверху вниз, строки располагаются слева направо
text-orientation: mixed;         # В вертикальном режиме символы разворачиваются на 90° по часовой стрелке writing-mode: vertical-lr
text-orientation: upright;       # В вертикальном режиме символы размещаются естественным путём друг под другом writing-mode: vertical-lr

direction:ltr;                   # Направление текста слева направо
direction:rtl;                   # Направление текста справа налево

unicode-bidi: normal;            # Обычное поведение, не влияет на порядок отображения текста
unicode-bidi: embed;             # Вложенный текст, который следует правилам текущего направления текста
unicode-bidi: bidi-override;     # Переопределяет порядок отображения текста, принудительно устанавливая направление









# FLEXBOX

display:inline-flex;           # Элемент отображается как строчный флекс-контейнер
display:flex;                  # Элемент отображается как блочный флекс-контейнер

flex:;                         # Сокращенное свойство flex
flex-grow:                     # Рост flex-элемента
flex-shrink:                   # Сжатие flex-элемента
flex-basis:                    # Базовый размер

# Направление главной оси
flex-direction:row;            # Элементы располагаются в строку слева направо
flex-direction:row-reverse;    # Элементы располагаются в строку справа налево
flex-direction:column;         # Элементы располагаются в столбец сверху вниз
flex-direction:column-reverse; # Элементы располагаются в столбец снизу вверх

# Перенос строк
flex-wrap:nowrap;              # Элементы не переносятся на новую строку (по умолчанию)
flex-wrap:wrap;                # Элементы переносятся на новую строку при необходимости
flex-wrap:wrap-reverse;        # Элементы переносятся на новую строку в обратном порядке

order:;                        # Определяет порядок вывода флексов внутри флекс-контейнера
flex-basis                     # Определяет основу флекса, которая является начальным размером элемента
place-self:;                   # align-self justify-self





# GRID
display:grid;
display:inline-grid;
grid:;                              # Сокращенное свойство
grid-template-columns:;             # Шаблон колонок   [start] 250px [line2] 400px [line3] 600px [end]
grid-template-columns:repeat(3,1fr)
grid-template-columns:repeat(auto-fill,1fr);
grid-template-columns:repeat(auto-fit,1fr);

grid-template-rows:;                # Шаблон строк     [row1-start] 15rem [row1-end] 30vh [last]





grid-column:                        # Старт и конец колонки
grid-row: # Старт и конец строки
grid-area: # Назначение области

# Выравнивания элемента внутри содержащего его блока вдоль строчной оси
justify-self:auto;                 # Автоматическое выравнивание по умолчанию
justify-self:normal;               # Нормальное выравнивание
justify-self:stretch;              # Растягивание элемента для заполнения контейнера
justify-self:<baseline-position>;  # Выравнивание по базовой линии
justify-self:<overflow-position>;  # Выравнивание при переполнении
justify-self:<self-position>;      # Позиционирование самого элемента
justify-self:left;                 # Выравнивание по левому краю
justify-self:right;                # Выравнивание по правому краю

# FLEXBOX & GRID
gap:; # Промежутки между строками и столбцами
column-gap:;   # Промежутки междуи столбцами
row-gap:;   # Промежутки между строками

# ВЫРАВНИВАНИЯ
place-content:;               # align-content justify-content - содержимое по обеим осям

# Работает в Grid и Flexbox, но особенно полезно для Flexbox, когда есть свободное место в контейнере.
# Определяет, как распределяется пространство между строками (или колонками) контейнера.
align-content:normal;
align-content:flex-start;          # Выравнивание содержимого по началу
align-content:flex-end;            # Выравнивание содержимого по концу
align-content:center;              # Центрирование содержимого
align-content:space-between;       # Пространство между элементами
align-content:space-around;        # Пространство вокруг элементов
align-content:space-evenly;        # Равномерное пространство между всеми элементами
align-content:stretch;             # Растягивание содержимого, чтобы заполнить доступное пространство

# Выравнивание элементов по основной оси (горизонтально для Flexbox и по строкам для Grid)
justify-content:flex-start;        # Выравнивание элементов по началу контейнера
justify-content:flex-end;          # Выравнивание элементов по концу контейнера
justify-content:center;            # Центрирование элементов в контейнере
justify-content:space-between;     # Пространство между элементами, первый и последний прижаты к краям
justify-content:space-around;      # Пространство вокруг элементов, равномерно распределенное
justify-content:space-evenly;      # Равномерное распределение пространства между всеми элементами

place-items:;                      # align-items justify-items - элементы внутри ячеек

# Выравнивание элементов по поперечной оси (вертикально для Flexbox и по колонкам для Grid).
align-items:flex-start;            # Выравнивание элементов по верхнему краю
align-items:flex-end;              # Выравнивание элементов по нижнему краю
align-items:center;                # Центрирование элементов по вертикали
align-items:baseline;              # Выравнивание по базовой линии текста
align-items:stretch;               # Растягивание элементов для заполнения контейнера

# Выравнивание конкретного элемента внутри контейнера
align-self:auto;
align-self:flex-start;             # Выравнивание по верхнему краю
align-self:flex-end;               # Выравнивание по нижнему краю
align-self:center;                 # Центрирование элемента по вертикали
align-self:baseline;               # Выравнивание по базовой линии текста
align-self:stretch;                # Растягивание элемента для заполнения контейнера

# ? по умолчанию для всех дочерних блоков, предоставляя им всем способ выравнивания каждого блока по соответствующей оси
justify-items:auto;                # Авто-выравнивание элементов
justify-items:normal;              # Нормальное выравнивание элементов
justify-items:stretch;             # Растягивание элементов для заполнения ячеек
justify-items:start;               # Выравнивание элементов по началу контейнера
justify-items:end;                 # Выравнивание элементов по концу контейнера
justify-items:baseline;            # Выравнивание элементов по базовой линии







# КОЛОНКИ
column-count:;                  # Определяет количество колонок в многоколоночном тексте.

# ПОВЕДЕНИЕ И ПОЛЬЗОВАТЕЛЬСКИЙ ВВОД
cursor:pointer;                 # Курсор мыши
pointer-events:auto;            # Элементы реагируют на события указателя (клики, наведение и т.д.)
pointer-events:none;            # Элементы игнорируют события указателя (не кликабельны)

# Возможность выделения текста
user-select:auto;
user-select:none;               # Запрещает выбор текста
user-select:text;               # Позволяет выбор текста
user-select:all;                # Позволяет выбрать весь текст в элементе
user-select:contain;            # Позволяет выбор текста внутри элемента

scroll-behavior:auto;           # Прокрутка происходит мгновенно (по умолчанию)
scroll-behavior:smooth;         # Прокрутка происходит плавно

#-------------------                               ttouch-action: # Обработка касаний
caret-color:;                    # Цвет курсора ввода

resize:none;                     # Запрещает изменение размера элемента
resize:both;                     # Позволяет изменять размер элемента как по горизонтали, так и по вертикали
resize:horizontal;               # Позволяет изменять размер элемента только по горизонтали
resize:vertical;                 # Позволяет изменять размер элемента только по вертикали

# --------------------------

# Общие
appearance:         # Внешний вид (по умолчанию для платформы)
box-sizing:         # Учет границ и паддингов в ширине/высоте
content-visibility: # Оптимизация отрисовки вне видимой области

# Цвет и фон
color:;
color:var(--red);
color:var(--color-);
color:var(--black);
color:#fff;

background: # Фон (сокращенное свойство)
background-color: # Цвет фона
background-image: # Изображение фона
background-position: # Положение фона
background-size: # Размер изображения
background-repeat: # Повторение фона
background-attachment: # Закрепление фона
background-clip: # Область отрисовки фона

# Размеры и отступы
width: # Ширина элемента
width:auto;
height: # Высота элемента
height:auto;
min-width: # Минимальная ширина
max-width: # Максимальная ширина
min-height: # Минимальная высота
max-height: # Максимальная высота
margin:; # Внешние отступы
padding:; # Внутренние отступы

# Границы
border: # Граница (сокращенное)
border-width: # Толщина границы
border-style: # Стиль границы
border-color: # Цвет границы
border-radius: # Скругление углов




# Отображение
object-fit: # Заполнение блока изображением/видео
object-position: # Положение содержимого



# Анимации и переходы
transition: # Переходы (сокр.)
transition-delay: # Задержка
transition-duration: # Длительность
transition-property: # Что анимировать
transition-timing-function: # Тип кривой
animation: # Анимация (сокр.)
animation-name: # Имя анимации
animation-duration: # Длительность
animation-delay: # Задержка
animation-iteration-count: # Кол-во повторов
animation-direction: # Направление
animation-fill-mode: # После анимации
animation-play-state: # Воспроизведение

# Эффекты
transform: # Трансформация (scale, rotate)
transform-origin: # Центр трансформации
perspective: # Перспектива 3D
opacity: # Прозрачность
filter: # Фильтры (blur, sepia и т.п.)

# 🧪 Прочее
box-sizing: # Учёт границ и отступов в размере
will-change: # Подсказка браузеру об изменениях

# Объектно-ориентированные свойства
object-fit: # Вписывание содержимого (cover, contain и др.)
object-position: # Позиция содержимого внутри блока
image-rendering: # Алгоритм рендеринга изображений (crisp-edges и др.)
aspect-ratio: # Соотношение сторон
overflow-clip-margin: # Отступы вокруг clipped области
contain: # Ограничение влияния элемента (layout, paint и др.)
resize: # Возможность изменения размеров пользователем
transform: # Трансформация объекта (scale, rotate и др.)
transform-origin: # Центр трансформации
perspective: # Перспектива в 3D

# 🎨 Цвет и фон
color: # Цвет текста
background: # Сокращённое свойство фона
background-color: # Цвет фона
background-image: # Фоновое изображение
background-position: # Позиция фонового изображения
background-repeat: # Повторение фона
background-size: # Размер фонового изображения
background-attachment: # Прокрутка фонового изображения
background-blend-mode: # Режим смешивания фонов

# 📐 Размер и отступы
width: # Ширина
height: # Высота
min-width: # Минимальная ширина
min-height: # Минимальная высота
max-width: # Максимальная ширина
max-height: # Максимальная высота
margin: # Внешние отступы
margin-top: # Отступ сверху
margin-right: # Отступ справа
margin-bottom: # Отступ снизу
margin-left: # Отступ слева
padding: # Внутренние отступы
padding-top: # Отступ сверху (внутр.)
padding-right: # Отступ справа (внутр.)
padding-bottom: # Отступ снизу (внутр.)
padding-left: # Отступ слева (внутр.)

# 🧱 Границы и рамки
border: # Сокращённое свойство границы
border-width: # Толщина границы
border-style: # Стиль границы
border-color: # Цвет границы
border-radius: # Скругление углов
box-shadow: # Тень блока
outline: # Обводка
outline-offset: # Смещение обводки







# box-decoration-break:slice | clone
# font-variant-caps:normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps



# 🎞️ Анимации и переходы
transition: # Сокращённое свойство переходов
transition-property: # Свойства для анимации
transition-duration: # Длительность перехода
transition-timing-function: # Функция распределения времени
transition-delay: # Задержка перед началом
animation: # Сокращённое свойство анимации
animation-name: # Имя анимации
animation-duration: # Продолжительность
animation-timing-function: # Характер движения
animation-delay: # Задержка
animation-iteration-count: # Количество повторений
animation-direction: # Направление воспроизведения
animation-fill-mode: # Состояние до и после
animation-play-state: # Пауза/воспроизведение



# 📊 Свойства таблиц
border-collapse: # Схлопывание границ
border-spacing: # Расстояние между ячейками
caption-side: # Расположение заголовка таблицы
empty-cells: # Отображение пустых ячеек
table-layout: # Макет таблицы
vertical-align: # Выравнивание содержимого по вертикали

# 📦 Контейнер-запросы (Container Queries)
container-type: # Тип контейнера (size, inline-size)
container-name: # Имя контейнера
container: # Сокращённое свойство container



# 🧷 Специальные технологии и поведение
scroll-behavior: # Поведение прокрутки (smooth)
scroll-snap-type: # Тип привязки прокрутки
scroll-snap-align: # Привязка элемента
scroll-snap-stop: # Остановка прокрутки
scroll-margin: # Отступ при прокрутке к элементу
scroll-padding: # Внутренний отступ для прокрутки
#writing-mode: # Направление письма
#text-orientation: # Ориентация текста
#hyphens: # Перенос слов
#resize: # Возможность изменения размера элемента


# scrollbar-width: auto | thin | none
# scrollbar-gutter: auto | stable && both-edges?
#






#Контейнер-запросы


#Свойства специфичных технологий (например, scroll-snap, writing-mode и др.)
